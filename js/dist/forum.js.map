{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@justoverclock/auto-post-count-badge/webpack/bootstrap","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/compat get default export","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/define property getters","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/hasOwnProperty shorthand","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/make namespace object","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['forum/app']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/extend']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/models/User']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/Model']\"","webpack://@justoverclock/auto-post-count-badge/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/Component']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@justoverclock/auto-post-count-badge/./src/forum/components/PostCountBadge.js","webpack://@justoverclock/auto-post-count-badge/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@justoverclock/auto-post-count-badge/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\n\r\nexport default class PostCountBadge extends Component {\r\n  view() {\r\n    const userPosts = this.attrs.posts;\r\n    const userClass = this.attrs.userClass;\r\n    console.log(userClass)\r\n    const userBadgeLabel = this.attrs.label;\r\n\r\n    const isFontAwesome = /^fa/.test(userClass);\r\n    const isFile = /^link:/.test(userClass);\r\n\r\n    console.log(userClass.replace('link:', ''))\r\n\r\n    const badgeIcon = isFontAwesome ? (\r\n      <i className={userClass + ' autopost'} />\r\n    ) : isFile ? (\r\n      <img className='autopost' src={userClass.replace('link:', '')} width=\"26\" height=\"26\" alt={userBadgeLabel} />\r\n    ) : <i className='fas fa-xmark autopost'></i>;\r\n    return (\r\n      <span>\r\n        <Tooltip\r\n          text={app.translator.trans('justoverclock-auto-post-count-badge.forum.hasWritten', {\r\n            count: userPosts,\r\n          })}\r\n        >\r\n          <span className=\"auto-badge\">\r\n            {badgeIcon}\r\n            {userBadgeLabel}\r\n          </span>\r\n        </Tooltip>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport PostUser from 'flarum/forum/components/PostUser';\r\nimport User from 'flarum/common/models/User';\r\nimport Model from 'flarum/common/Model';\r\nimport PostCountBadge from './components/PostCountBadge';\r\n\r\napp.initializers.add('justoverclock/auto-post-count-badge', () => {\r\n  User.prototype.autoCountBadge = Model.attribute('autoCountBadge');\r\n  User.prototype.autoCountBadgeLabel = Model.attribute('autoCountBadgeLabel');\r\n\r\n  extend(PostUser.prototype, 'view', function (vnode) {\r\n    const checkRoute = app.current.get('routeName');\r\n\r\n    if (checkRoute === 'discussion' || checkRoute === 'discussion.near' || checkRoute === 'blogArticle') {\r\n      const post = this.attrs.post;\r\n      const user = post.user();\r\n\r\n      // If we don't have a user, do nothing\r\n      if (!user) {\r\n        return;\r\n      }\r\n\r\n      const userPosts = post.user().commentCount();\r\n      const userClass = post.user().autoCountBadge();\r\n      const userBadgeLabel = post.user().autoCountBadgeLabel();\r\n\r\n      // We don't have a class or label, so do nothing\r\n      if (userClass === '' || userBadgeLabel === '') {\r\n        return;\r\n      }\r\n\r\n      vnode.children.push(<PostCountBadge posts={userPosts} userClass={userClass} label={userBadgeLabel} />);\r\n    }\r\n  });\r\n});\r\n\r\nimport * as components from './components';\r\n\r\nexport { components };\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","PostCountBadge","_Component","subClass","superClass","apply","arguments","create","constructor","view","userPosts","this","attrs","posts","userClass","console","log","userBadgeLabel","label","isFontAwesome","test","isFile","replace","badgeIcon","m","className","src","width","height","alt","Tooltip","text","app","trans","count","Component","add","User","autoCountBadge","Model","autoCountBadgeLabel","extend","PostUser","vnode","checkRoute","post","user","commentCount","children","push"],"sourceRoot":""}