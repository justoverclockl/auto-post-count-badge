{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,uGCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAzC,SAASC,EAAgBhB,EAAGiB,GAMzC,OALAD,EAAkBf,OAAOiB,gBAAkB,SAAyBlB,EAAGiB,GAErE,OADAjB,EAAEmB,UAAYF,EACPjB,CACR,EAEMgB,EAAgBhB,EAAGiB,EAC3B,CCPD,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCInCK,EAAAA,SAAAA,GCHN,IAAwBC,EAAUC,E,yDAAAA,E,GAAVD,E,GAC5Bd,UAAYN,OAAOsB,OAAOD,EAAWf,WAC9Cc,EAASd,UAAUiB,YAAcH,EACjCH,EAAeG,EAAUC,G,YDCzBG,KAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,MACvBC,EAAYH,KAAKC,MAAME,UACvBC,EAAiBJ,KAAKC,MAAMI,MAE5BC,EAAgB,MAAMC,KAAKJ,GAC3BK,EAAS,SAASD,KAAKJ,GAEvBM,EAAYH,EAChB,OAAGI,MAAOP,EAAY,cACpBK,EACF,SAAKE,MAAM,WAAWC,IAAKR,EAAUS,QAAQ,QAAS,IAAKC,MAAM,KAAKC,OAAO,KAAKC,IAAKX,IACrF,OAAGM,MAAM,0BACb,OACE,cACE,EAAC,IAAD,CACEM,KAAMC,IAAAA,WAAAA,MAAqB,uDAAwD,CACjFC,MAAOnB,KAGT,UAAMoB,UAAU,cACbV,EACAL,IAKV,E,EA5BkBX,CAAuB2B,KEG5CH,IAAAA,aAAAA,IAAqB,uCAAuC,WAC1DI,IAAAA,UAAAA,eAAgCC,IAAAA,UAAgB,kBAChDD,IAAAA,UAAAA,oBAAqCC,IAAAA,UAAgB,wBAErDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAoB,QAAQ,SAAUC,GAC3C,IAAMC,EAAaT,IAAAA,QAAAA,IAAgB,aAEnC,GAAmB,eAAfS,GAA8C,oBAAfA,GAAmD,gBAAfA,EAA8B,CACnG,IAAMC,EAAO3B,KAAKC,MAAM0B,KAIxB,IAHaA,EAAKC,OAIhB,OAGF,IAAM7B,EAAY4B,EAAKC,OAAOC,eACxB1B,EAAYwB,EAAKC,OAAOE,iBACxB1B,EAAiBuB,EAAKC,OAAOG,sBAGnC,GAAkB,KAAd5B,GAAuC,KAAnBC,EACtB,OAGFqB,EAAMO,SAASC,KAAK,EAACxC,EAAD,CAAgBS,MAAOH,EAAWI,UAAWA,EAAWE,MAAOD,IACpF,CACF,GACF,G","sources":["webpack://@justoverclock/auto-post-count-badge/webpack/bootstrap","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/compat get default export","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/define property getters","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/hasOwnProperty shorthand","webpack://@justoverclock/auto-post-count-badge/webpack/runtime/make namespace object","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['forum/app']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/extend']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/models/User']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/Model']\"","webpack://@justoverclock/auto-post-count-badge/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/Component']\"","webpack://@justoverclock/auto-post-count-badge/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@justoverclock/auto-post-count-badge/./src/forum/components/PostCountBadge.js","webpack://@justoverclock/auto-post-count-badge/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@justoverclock/auto-post-count-badge/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class PostCountBadge extends Component {\n  view() {\n    const userPosts = this.attrs.posts;\n    const userClass = this.attrs.userClass;\n    const userBadgeLabel = this.attrs.label;\n    \n    const isFontAwesome = /^fa/.test(userClass);\n    const isFile = /^link:/.test(userClass);\n\n    const badgeIcon = isFontAwesome ? (\n      <i class={userClass + ' autopost'} />\n    ) : isFile ? (\n      <img class='autopost' src={userClass.replace('link:', '')} width=\"26\" height=\"26\" alt={userBadgeLabel} />\n    ) : <i class='fas fa-xmark autopost' />;\n    return (\n      <span>\n        <Tooltip\n          text={app.translator.trans('justoverclock-auto-post-count-badge.forum.hasWritten', {\n            count: userPosts,\n          })}\n        >\n          <span className=\"auto-badge\">\n            {badgeIcon}\n            {userBadgeLabel}\n          </span>\n        </Tooltip>\n      </span>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\nimport PostCountBadge from './components/PostCountBadge';\n\napp.initializers.add('justoverclock/auto-post-count-badge', () => {\n  User.prototype.autoCountBadge = Model.attribute('autoCountBadge');\n  User.prototype.autoCountBadgeLabel = Model.attribute('autoCountBadgeLabel');\n\n  extend(PostUser.prototype, 'view', function (vnode) {\n    const checkRoute = app.current.get('routeName');\n\n    if (checkRoute === 'discussion' || checkRoute === 'discussion.near' || checkRoute === 'blogArticle') {\n      const post = this.attrs.post;\n      const user = post.user();\n\n      // If we don't have a user, do nothing\n      if (!user) {\n        return;\n      }\n\n      const userPosts = post.user().commentCount();\n      const userClass = post.user().autoCountBadge();\n      const userBadgeLabel = post.user().autoCountBadgeLabel();\n\n      // We don't have a class or label, so do nothing\n      if (userClass === '' || userBadgeLabel === '') {\n        return;\n      }\n\n      vnode.children.push(<PostCountBadge posts={userPosts} userClass={userClass} label={userBadgeLabel} />);\n    }\n  });\n});\n\nimport * as components from './components';\n\nexport { components };\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","PostCountBadge","subClass","superClass","create","constructor","view","userPosts","this","attrs","posts","userClass","userBadgeLabel","label","isFontAwesome","test","isFile","badgeIcon","class","src","replace","width","height","alt","text","app","count","className","Component","User","Model","extend","PostUser","vnode","checkRoute","post","user","commentCount","autoCountBadge","autoCountBadgeLabel","children","push"],"sourceRoot":""}